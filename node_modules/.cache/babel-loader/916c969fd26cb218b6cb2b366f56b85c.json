{"remainingRequest":"/Users/neo/Documents/IPL/PFE/LinkenPartyVue/node_modules/babel-loader/lib/index.js!/Users/neo/Documents/IPL/PFE/LinkenPartyVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/neo/Documents/IPL/PFE/LinkenPartyVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/neo/Documents/IPL/PFE/LinkenPartyVue/src/components/GoogleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/neo/Documents/IPL/PFE/LinkenPartyVue/src/components/GoogleMap.vue","mtime":1558110704005},{"path":"/Users/neo/Documents/IPL/PFE/LinkenPartyVue/node_modules/cache-loader/dist/cjs.js","mtime":1558101394270},{"path":"/Users/neo/Documents/IPL/PFE/LinkenPartyVue/node_modules/babel-loader/lib/index.js","mtime":1558101394170},{"path":"/Users/neo/Documents/IPL/PFE/LinkenPartyVue/node_modules/cache-loader/dist/cjs.js","mtime":1558101394270},{"path":"/Users/neo/Documents/IPL/PFE/LinkenPartyVue/node_modules/vue-loader/lib/index.js","mtime":1558101397528}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\nexport default {\n  name: \"google-map\",\n  props: [\"name\"],\n  data: function data() {\n    return {\n      mapName: this.name + \"-map\",\n      partyList: []\n    };\n  },\n  mounted: function mounted() {\n    var initialLocation;\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n        map.setCenter(initialLocation);\n        var marker = new google.maps.Marker({\n          position: initialLocation,\n          map: map\n        });\n        marker.setMap(map);\n      });\n    }\n\n    var element = document.getElementById(this.mapName);\n    var options = {\n      zoom: 14,\n      center: initialLocation,\n      disableDefaultUI: true\n    };\n    var parties = this.$store.getters.parties;\n    console.log(\"dqsdqsd\", parties.length);\n    var geocoder = new google.maps.Geocoder();\n\n    for (var i = 0; i < parties.length; i++) {\n      console.log(\"sdddddddd\", parties[i].address_event);\n      geocoder.geocode({\n        address: parties[i].address_event\n      }, function (results, status) {\n        if (status == google.maps.GeocoderStatus.OK) {\n          var latitude = results[0].geometry.location.lat();\n          var longitude = results[0].geometry.location.lng();\n          var location = new google.maps.LatLng(latitude, longitude);\n          var marker = new google.maps.Marker({\n            position: location,\n            map: map\n          });\n          marker.setMap(map);\n        }\n      });\n    }\n\n    var map = new google.maps.Map(element, options);\n  },\n  created: function created() {//var parties = this.$store.getters.parties;\n    //console.log(\"dqsdqsd\",this.partyList.length);\n  },\n  methods: {}\n};",{"version":3,"sources":["GoogleMap.vue"],"names":[],"mappings":";;;;;AAKA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA,CAAA,MAAA,CAFA;AAIA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KAAA,IAAA,GAAA,MADA;AAEA,MAAA,SAAA,EAAA;AAFA,KAAA;AAIA,GATA;AAUA,EAAA,OAAA,EAAA,mBAAA;AACA,QAAA,eAAA;;AACA,QAAA,SAAA,CAAA,WAAA,EAAA;AACA,MAAA,SAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,eAAA,GAAA,IAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CACA,QAAA,CAAA,MAAA,CAAA,QADA,EAEA,QAAA,CAAA,MAAA,CAAA,SAFA,CAAA;AAIA,QAAA,GAAA,CAAA,SAAA,CAAA,eAAA;AACA,YAAA,MAAA,GAAA,IAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA;AACA,UAAA,QAAA,EAAA,eADA;AAEA,UAAA,GAAA,EAAA;AAFA,SAAA,CAAA;AAIA,QAAA,MAAA,CAAA,MAAA,CAAA,GAAA;AACA,OAXA;AAYA;;AACA,QAAA,OAAA,GAAA,QAAA,CAAA,cAAA,CAAA,KAAA,OAAA,CAAA;AACA,QAAA,OAAA,GAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,eAFA;AAGA,MAAA,gBAAA,EAAA;AAHA,KAAA;AAOA,QAAA,OAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,OAAA,CAAA,MAAA;AACA,QAAA,QAAA,GAAA,IAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;;AACA,SAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,aAAA;AACA,MAAA,QAAA,CAAA,OAAA,CAAA;AAAA,QAAA,OAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AAAA,OAAA,EAAA,UACA,OADA,EAEA,MAFA,EAGA;AACA,YAAA,MAAA,IAAA,MAAA,CAAA,IAAA,CAAA,cAAA,CAAA,EAAA,EAAA;AACA,cAAA,QAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,EAAA;AACA,cAAA,SAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,EAAA;AACA,cAAA,QAAA,GAAA,IAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,QAAA,EAAA,SAAA,CAAA;AACA,cAAA,MAAA,GAAA,IAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA;AAAA,YAAA,QAAA,EAAA,QAAA;AAAA,YAAA,GAAA,EAAA;AAAA,WAAA,CAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,GAAA;AACA;AACA,OAXA;AAYA;;AACA,QAAA,GAAA,GAAA,IAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,EAAA,OAAA,CAAA;AACA,GArDA;AAsDA,EAAA,OAAA,EAAA,mBAAA,CACA;AACA;AACA,GAzDA;AA0DA,EAAA,OAAA,EAAA;AA1DA,CAAA","sourcesContent":["<template>\n  <div class=\"google-map\" :id=\"mapName\"></div>\n</template>\n\n<script>\nexport default {\n  name: \"google-map\",\n  props: [\"name\"],\n\n  data: function() {\n    return {\n      mapName: this.name + \"-map\",\n      partyList: []\n    };\n  },\n  mounted: function() {\n    var initialLocation;\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function(position) {\n        initialLocation = new google.maps.LatLng(\n          position.coords.latitude,\n          position.coords.longitude\n        );\n        map.setCenter(initialLocation);\n        var marker = new google.maps.Marker({\n          position: initialLocation,\n          map: map\n        });\n        marker.setMap(map);\n      });\n    }\n    const element = document.getElementById(this.mapName);\n    const options = {\n      zoom: 14,\n      center: initialLocation,\n      disableDefaultUI: true\n    };\n\n  \n    var parties = this.$store.getters.parties;\n    console.log(\"dqsdqsd\",parties.length);\n    var geocoder = new google.maps.Geocoder();\n    for (var i = 0; i < parties.length; i++) {\n      console.log(\"sdddddddd\",parties[i].address_event);\n      geocoder.geocode({ address: parties[i].address_event }, function(\n        results,\n        status\n      ) {\n        if (status == google.maps.GeocoderStatus.OK) {\n          var latitude = results[0].geometry.location.lat();\n          var longitude = results[0].geometry.location.lng();\n          var location = new google.maps.LatLng(latitude, longitude);\n          var marker = new google.maps.Marker({ position: location, map: map});\n          marker.setMap(map);\n        }\n      });\n    }\n    const map = new google.maps.Map(element, options);\n  },\n  created: function(){\n    //var parties = this.$store.getters.parties;\n    //console.log(\"dqsdqsd\",this.partyList.length);\n  },\n  methods: {}\n};\n</script>\n<style>\n.google-map {\n  width: 850px;\n  height: 400px;\n  background: white;\n  border-bottom-left-radius: 1em;\n  border-bottom-right-radius: 1em;\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}